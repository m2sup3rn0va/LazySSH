#! /usr/bin/python3

import paramiko
import os
import sys
import argparse
import subprocess


def check_arg(args=None):
    argParser = argparse.ArgumentParser(description='Umount SSH File System')
    argParser.add_argument('-n', '--conn_name',
                        help='Connection Name: In config file - Host <Connection Name>',
                        required='True')

    return argParser.parse_args(args)


def mount_ssh(args):

    HOME = os.environ['HOME']
    configFile = HOME + "/.ssh/config"

    try:
        configFileParser = paramiko.SSHConfig.from_file(open(configFile))
    except:
        print("Error: Issue with config file. Please check at : ", configFile)
        exit(0)

    try:
        userName = str(configFileParser.lookup(args.conn_name)['user'])
    except:
        print("Error: No Username for the connection")
        exit(0)

    remoteFolder = 'Remote_' + args.conn_name
    localFolder = 'Local_' + args.conn_name

    remoteFolderPath = '/home/' + userName + '/' + remoteFolder
    localFolderPath = '/home/' + os.getlogin() + '/' + localFolder

    # Umount Local
    if os.path.exists(localFolderPath):
        print('Info: Umounting Local from : ', localFolderPath)
        cmd = 'fusermount -u ' + localFolderPath
        subprocess.run([cmd], shell=True)
        cmd = 'rmdir ' + localFolderPath
        subprocess.run([cmd], shell=True)

    else:
        print('Error: Can\'t Umount.')
        exit(0)

    # Umount Remote
    cmd = "ssh " + args.conn_name + " 'rm -rf " + remoteFolderPath + "'"
    res = subprocess.run(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True, text=True)

    if res.returncode == 0:
        print('Info: Umounting Remote from : ', remoteFolderPath)
    else:
        print("Error: Not able to umount remote folder")
        exit(0)


if __name__ == '__main__':

    args = check_arg(sys.argv[1:])
    mount_ssh(args)
